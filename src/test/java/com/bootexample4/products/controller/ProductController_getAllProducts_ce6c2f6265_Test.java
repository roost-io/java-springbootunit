// Test generated by RoostGPT for test endtoendunit using AI Type Open AI and AI Model gpt-4

package com.bootexample4.products.controller;

import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Assertions.assertEquals;
import com.bootexample4.products.model.Product;
import com.bootexample4.products.repository.ProductRepository;

public class ProductController_getAllProducts_ce6c2f6265_Test {

    @InjectMocks
    ProductController productController;

    @Mock
    ProductRepository productRepository;

    @BeforeEach
    public void init() {
        MockitoAnnotations.initMocks(this);
    }

    @Test
    public void testGetAllProducts() {
        Product product1 = new Product();
        product1.setId(1L); // Changed from int to Long
        product1.setName("Product1");
        product1.setDescription("Description1");
        product1.setPrice(100.0);

        Product product2 = new Product();
        product2.setId(2L); // Changed from int to Long
        product2.setName("Product2");
        product2.setDescription("Description2");
        product2.setPrice(200.0);

        when(productRepository.findAll()).thenReturn(Arrays.asList(product1, product2));

        List<Product> productList = productController.getAllProducts();
        assertEquals(2, productList.size());
        verify(productRepository, times(1)).findAll();
    }

    @Test
    public void testGetAllProducts_Empty() {
        when(productRepository.findAll()).thenReturn(Arrays.asList());

        List<Product> productList = productController.getAllProducts();
        assertEquals(0, productList.size());
        verify(productRepository, times(1)).findAll();
    }
}
